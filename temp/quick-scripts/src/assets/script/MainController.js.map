{"version":3,"sources":["assets\\script\\MainController.js"],"names":["Ball","require","Barrier","Config","MainController","cc","Class","Component","properties","prefabBarriers","type","Prefab","prefabBall","balls","barriers","lbScoreCount","Label","ballCount","guide","Node","gameStatus","gameOverMark","takeAim","onLoad","director","getPhysicsManager","enabled","getActionManager","gravity","v2","node","on","EventType","TOUCH_START","onTouchStart","TOUCH_END","onTouchEnd","init","guideShow","addBarriers","score","recycleBallsCount","barrierScoreRate","main","group","groupBallInRecycle","active","zIndex","guideHide","touch","isRecycleFinished","graphics","getChildByName","getComponent","Graphics","clear","touchPos","convertTouchToNodeSpaceAR","shootBalls","sub","addBall","pos","ball","instantiate","parent","position","groupBallInGame","push","setBallCount","length","num","string","toString","dir","i","scheduleOnce","shootBall","bind","rigidBody","pathPos","runAction","sequence","cardinalSplineTo","callFunc","linearVelocity","mul","recycleBall","barrier","moveBy","y","shake","gameOver","startPosX","endPosX","currentPosX","getRandomSpace","Math","floor","random","lbScore","rotation","addScore","setBarrierScore","randomNum","removeBarrier","idx","indexOf","removeFromParent","splice","Min","Max","Range","Rand","handMove","animCtrl","Animation","play","stop","gameStart","loadScene","module","exports"],"mappings":";;;;;;AAAA,IAAIA,IAAI,GAAGC,OAAO,CAAC,QAAD,CAAlB;;AACA,IAAIC,OAAO,GAAGD,OAAO,CAAC,WAAD,CAArB;;AACA,IAAIE,MAAM,GAAGF,OAAO,CAAC,UAAD,CAApB;;AACAA,OAAO,CAAC,SAAD,CAAP,EACA;;;AACA,IAAIG,cAAc,GAAGC,EAAE,CAACC,KAAH,CAAS;AAC1B,aAASD,EAAE,CAACE,SADc;AAE1BC,EAAAA,UAAU,EAAE;AAAA,WAAO;AACfC,MAAAA,cAAc,EAAE;AACZC,QAAAA,IAAI,EAAEL,EAAE,CAACM,MADG;AAEZ,mBAAS;AAFG,OADD;AAKfC,MAAAA,UAAU,EAAEP,EAAE,CAACM,MALA;AAMfE,MAAAA,KAAK,EAAE;AACHH,QAAAA,IAAI,EAAEV,IADH;AAEH,mBAAS;AAFN,OANQ;AAUfc,MAAAA,QAAQ,EAAE;AACNJ,QAAAA,IAAI,EAAER,OADA;AAEN,mBAAS;AAFH,OAVK;AAcfa,MAAAA,YAAY,EAAEV,EAAE,CAACW,KAdF;AAefC,MAAAA,SAAS,EAAEZ,EAAE,CAACW,KAfC;AAgBfE,MAAAA,KAAK,EAAEb,EAAE,CAACc,IAhBK;AAgBC;AAChBC,MAAAA,UAAU,EAAE,IAjBG;AAkBfC,MAAAA,YAAY,EAAEhB,EAAE,CAACc,IAlBF;AAkBQ;AACvBG,MAAAA,OAAO,EAACjB,EAAE,CAACc,IAnBI,CAmBC;;AAnBD,KAAP;AAAA,GAFc;AAwB1B;AACAI,EAAAA,MAzB0B,oBAyBjB;AACL;AACAlB,IAAAA,EAAE,CAACmB,QAAH,CAAYC,iBAAZ,GAAgCC,OAAhC,GAA0C,IAA1C;AACArB,IAAAA,EAAE,CAACmB,QAAH,CAAYG,gBAAZ,GAA+BC,OAA/B,GAAyCvB,EAAE,CAACwB,EAAH,CAAM,CAAN,EAAS,CAAC,IAAV,CAAzC,CAHK,CAGqD;AAC1D;;AACA,SAAKC,IAAL,CAAUC,EAAV,CAAa1B,EAAE,CAACc,IAAH,CAAQa,SAAR,CAAkBC,WAA/B,EAA4C,KAAKC,YAAjD,EAA+D,IAA/D;AACA,SAAKJ,IAAL,CAAUC,EAAV,CAAa1B,EAAE,CAACc,IAAH,CAAQa,SAAR,CAAkBG,SAA/B,EAA0C,KAAKC,UAA/C,EAA2D,IAA3D,EANK,CAOL;;AACA,SAAKC,IAAL;AACA,SAAKC,SAAL;AACA,SAAKC,WAAL;AACH,GApCyB;AAqC1B;AACAF,EAAAA,IAtC0B,kBAsCpB;AACF,SAAKG,KAAL,GAAa,CAAb,CADE,CACc;;AAChB,SAAKC,iBAAL,GAAyB,CAAzB,CAFE,CAE0B;;AAC5B,SAAKC,gBAAL,GAAwB,CAAxB,CAHE,CAGyB;;AAC3B,SAAK7B,KAAL,CAAW,CAAX,EAAc8B,IAAd,GAAqB,IAArB;AACA,SAAK9B,KAAL,CAAW,CAAX,EAAciB,IAAd,CAAmBc,KAAnB,GAA2BzC,MAAM,CAAC0C,kBAAlC;AACA,SAAKxB,YAAL,CAAkByB,MAAlB,GAA2B,KAA3B;AACA,SAAKzB,YAAL,CAAkB0B,MAAlB,GAA2B,EAA3B;AACA,SAAK7B,KAAL,CAAW6B,MAAX,GAAoB,EAApB;AACA,SAAK7B,KAAL,CAAW4B,MAAX,GAAoB,KAApB;AACA,SAAKxB,OAAL,CAAaqB,IAAb,GAAoB,IAApB;AACH,GAjDyB;AAkD1B;AACAT,EAAAA,YAnD0B,0BAmDX;AACX,SAAKc,SAAL;AACH,GArDyB;AAsD1B;AACAZ,EAAAA,UAvD0B,sBAuDfa,KAvDe,EAuDR;AACd,QAAI,CAAC,KAAKC,iBAAL,EAAL,EAA+B;AAC3B;AACH;;AACD,QAAIC,QAAQ,GAAG,KAAKrB,IAAL,CAAUsB,cAAV,CAAyB,UAAzB,EAAqCC,YAArC,CAAkDhD,EAAE,CAACiD,QAArD,CAAf;AACAH,IAAAA,QAAQ,CAACI,KAAT;AACA,SAAKd,iBAAL,GAAyB,CAAzB;AACA,QAAIe,QAAQ,GAAG,KAAK1B,IAAL,CAAU2B,yBAAV,CAAoCR,KAAK,CAACA,KAA1C,CAAf;AACA,SAAKS,UAAL,CAAgBF,QAAQ,CAACG,GAAT,CAAatD,EAAE,CAACwB,EAAH,CAAM,CAAN,EAAS,GAAT,CAAb,CAAhB;AACH,GAhEyB;AAiE1B;AACA+B,EAAAA,OAlE0B,mBAkElBC,GAlEkB,EAkEb;AACT,QAAIC,IAAI,GAAGzD,EAAE,CAAC0D,WAAH,CAAe,KAAKnD,UAApB,EAAgCyC,YAAhC,CAA6CrD,IAA7C,CAAX;AACA8D,IAAAA,IAAI,CAAChC,IAAL,CAAUkC,MAAV,GAAmB,KAAKlC,IAAxB;AACAgC,IAAAA,IAAI,CAAChC,IAAL,CAAUmC,QAAV,GAAqBJ,GAArB;AACAC,IAAAA,IAAI,CAACnB,IAAL,GAAY,IAAZ;AACAmB,IAAAA,IAAI,CAAChC,IAAL,CAAUc,KAAV,GAAkBzC,MAAM,CAAC+D,eAAzB;AACA,SAAKrD,KAAL,CAAWsD,IAAX,CAAgBL,IAAhB;AACA,SAAKM,YAAL,CAAkB,KAAKvD,KAAL,CAAWwD,MAA7B;AACH,GA1EyB;AA2E1B;AACAD,EAAAA,YA5E0B,wBA4EbE,GA5Ea,EA4ET;AACb,SAAKrD,SAAL,CAAesD,MAAf,GAAwB,SAASD,GAAG,CAACE,QAAJ,EAAjC;AACH,GA9EyB;AA+E1B;AACAd,EAAAA,UAhF0B,sBAgFfe,GAhFe,EAgFV;AAAA;;AACZ,QAAI,CAAC,KAAKrD,UAAV,EAAsB;AAClB;AACH;;AAHW,+BAIHsD,CAJG;AAKR,UAAIZ,IAAI,GAAG,KAAI,CAACjD,KAAL,CAAW6D,CAAX,CAAX;;AACA,MAAA,KAAI,CAACC,YAAL,CAAkB,YAAY;AAC1B,aAAKC,SAAL,CAAed,IAAf,EAAqBW,GAArB;AACH,OAFiB,CAEhBI,IAFgB,CAEX,KAFW,CAAlB,EAEcH,CAAC,GAAG,GAFlB;AANQ;;AAIZ,SAAK,IAAIA,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAK7D,KAAL,CAAWwD,MAA/B,EAAuCK,CAAC,EAAxC,EAA4C;AAAA,YAAnCA,CAAmC;AAK3C;AACJ,GA1FyB;AA2F1B;AACAE,EAAAA,SA5F0B,qBA4FhBd,IA5FgB,EA4FVW,GA5FU,EA4FL;AACjBX,IAAAA,IAAI,CAACgB,SAAL,CAAehC,MAAf,GAAwB,KAAxB;AACA,QAAIiC,OAAO,GAAG,EAAd;AACAA,IAAAA,OAAO,CAACZ,IAAR,CAAaL,IAAI,CAAChC,IAAL,CAAUmC,QAAvB;AACAc,IAAAA,OAAO,CAACZ,IAAR,CAAa9D,EAAE,CAACwB,EAAH,CAAM,CAAN,EAAS,GAAT,CAAb;AACAiC,IAAAA,IAAI,CAAChC,IAAL,CAAUc,KAAV,GAAkBzC,MAAM,CAAC+D,eAAzB;AACAJ,IAAAA,IAAI,CAAChC,IAAL,CAAUkD,SAAV,CAAoB3E,EAAE,CAAC4E,QAAH,CAChB5E,EAAE,CAAC6E,gBAAH,CAAoB,GAApB,EAAyBH,OAAzB,EAAkC,GAAlC,CADgB,EAEhB1E,EAAE,CAAC8E,QAAH,CAAY,YAAY;AACpBrB,MAAAA,IAAI,CAACgB,SAAL,CAAehC,MAAf,GAAwB,IAAxB;AACAgB,MAAAA,IAAI,CAACgB,SAAL,CAAeM,cAAf,GAAgCX,GAAG,CAACY,GAAJ,CAAQ,CAAR,CAAhC;AACH,KAHD,CAFgB,CAApB;AAOH,GAzGyB;AA0G1B;AACAC,EAAAA,WA3G0B,yBA2GZ;AAAA;;AACV,SAAK7C,iBAAL;AACA,SAAKC,gBAAL,IAAyB,GAAzB;;AACA,QAAI,KAAKQ,iBAAL,EAAJ,EAA8B;AAAA,mCACjBwB,CADiB;AAEtB,YAAIa,OAAO,GAAG,MAAI,CAACzE,QAAL,CAAc4D,CAAd,CAAd;AACAa,QAAAA,OAAO,CAACzD,IAAR,CAAakD,SAAb,CAAuB3E,EAAE,CAAC4E,QAAH,CACnB5E,EAAE,CAACmF,MAAH,CAAU,GAAV,EAAenF,EAAE,CAACwB,EAAH,CAAM,CAAN,EAAS,GAAT,CAAf,CADmB,EAEnBxB,EAAE,CAAC8E,QAAH,CAAY,YAAY;AACpB,cAAII,OAAO,CAACzD,IAAR,CAAamC,QAAb,CAAsBwB,CAAtB,GAA0B,GAA9B,EAAmC;AAC/BF,YAAAA,OAAO,CAACzD,IAAR,CAAakD,SAAb,CAAuB3E,EAAE,CAACqF,KAAH,CAAS,GAAT,EAAc,CAAd,EAAiB,CAAjB,CAAvB;AACH;;AACD,cAAIH,OAAO,CAACzD,IAAR,CAAamC,QAAb,CAAsBwB,CAAtB,GAA0B,GAA9B,EAAmC;AAC/B,iBAAKE,QAAL;AACH;AACJ,SAPW,CAOVd,IAPU,CAOL,MAPK,CAAZ,CAFmB,CAAvB;AAHsB;;AAC1B,WAAK,IAAIH,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAK5D,QAAL,CAAcuD,MAAlC,EAA0CK,CAAC,EAA3C,EAA+C;AAAA,eAAtCA,CAAsC;AAa9C;;AACD,WAAKnC,WAAL;AACH;AACJ,GA/HyB;AAgI1B;AACAW,EAAAA,iBAjI0B,+BAiIN;AAChB,WAAO,KAAKT,iBAAL,IAA0B,KAAK5B,KAAL,CAAWwD,MAA5C;AACH,GAnIyB;AAoI1B;AACA9B,EAAAA,WArI0B,yBAqIZ;AACV,QAAIqD,SAAS,GAAG,CAAC,GAAjB;AACA,QAAIC,OAAO,GAAG,GAAd;AACA,QAAIC,WAAW,GAAGF,SAAS,GAAG,KAAKG,cAAL,EAA9B;;AACA,WAAOD,WAAW,GAAGD,OAArB,EAA8B;AAC1B,UAAIN,OAAO,GAAGlF,EAAE,CAAC0D,WAAH,CAAe,KAAKtD,cAAL,CAAoBuF,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,KAAKzF,cAAL,CAAoB4D,MAA/C,CAApB,CAAf,EAA4FhB,YAA5F,CAAyGnD,OAAzG,CAAd;AACAqF,MAAAA,OAAO,CAACzD,IAAR,CAAakC,MAAb,GAAsB,KAAKlC,IAA3B;AACAyD,MAAAA,OAAO,CAACzD,IAAR,CAAamC,QAAb,GAAwB5D,EAAE,CAACwB,EAAH,CAAMiE,WAAN,EAAmB,CAAC,GAApB,CAAxB;;AACA,UAAIP,OAAO,CAACY,OAAZ,EAAqB;AACjBZ,QAAAA,OAAO,CAACzD,IAAR,CAAasE,QAAb,GAAwBJ,IAAI,CAACE,MAAL,KAAgB,GAAxC;AACH;;AACDX,MAAAA,OAAO,CAAC5C,IAAR,GAAe,IAAf;AACAmD,MAAAA,WAAW,IAAI,KAAKC,cAAL,EAAf;AACA,WAAKjF,QAAL,CAAcqD,IAAd,CAAmBoB,OAAnB;AACH;AACJ,GApJyB;AAqJ1B;AACAG,EAAAA,KAtJ0B,iBAsJpBH,OAtJoB,EAsJX;AACX,QAAIG,KAAK,GAAGrF,EAAE,CAACqF,KAAH,CAAS,GAAT,EAAc,CAAd,EAAiB,CAAjB,CAAZ;AACAH,IAAAA,OAAO,CAACzD,IAAR,CAAakD,SAAb,CAAuBU,KAAvB;AACH,GAzJyB;AA0J1B;AACAW,EAAAA,QA3J0B,sBA2Jf;AACP,SAAK7D,KAAL;AACA,SAAKzB,YAAL,CAAkBwD,MAAlB,GAA2B,QAAQ,KAAK/B,KAAL,CAAWgC,QAAX,EAAnC;AACH,GA9JyB;AAgK1B;AACA8B,EAAAA,eAjK0B,6BAiKR;AACd,QAAI9D,KAAK,GAAGwD,IAAI,CAACC,KAAL,CAAW,KAAKM,SAAL,CAAe,IAAI,IAAI,KAAK7D,gBAA5B,EAA8C,IAAI,IAAI,KAAKA,gBAA3D,CAAX,CAAZ;AACA,WAAOF,KAAP;AACH,GApKyB;AAqK1B;AACAgE,EAAAA,aAtK0B,yBAsKZjB,OAtKY,EAsKH;AACnB,QAAIkB,GAAG,GAAG,KAAK3F,QAAL,CAAc4F,OAAd,CAAsBnB,OAAtB,CAAV;;AACA,QAAIkB,GAAG,IAAI,CAAC,CAAZ,EAAe;AACXlB,MAAAA,OAAO,CAACzD,IAAR,CAAa6E,gBAAb,CAA8B,KAA9B;AACA,WAAK7F,QAAL,CAAc8F,MAAd,CAAqBH,GAArB,EAA0B,CAA1B;AACH;AACJ,GA5KyB;AA6K1B;AACAV,EAAAA,cA9K0B,4BA8KT;AACb,WAAO,KAAKC,IAAI,CAACE,MAAL,KAAgB,GAA5B;AACH,GAhLyB;AAiL1B;AACAK,EAAAA,SAlL0B,qBAkLhBM,GAlLgB,EAkLXC,GAlLW,EAkLN;AAChB,QAAIC,KAAK,GAAGD,GAAG,GAAGD,GAAlB;AACA,QAAIG,IAAI,GAAGhB,IAAI,CAACE,MAAL,EAAX;AACA,QAAI5B,GAAG,GAAGuC,GAAG,GAAGb,IAAI,CAACC,KAAL,CAAWe,IAAI,GAAGD,KAAlB,CAAhB;AACA,WAAOzC,GAAP;AACH,GAvLyB;AAwL1B;AACAhC,EAAAA,SAzL0B,uBAyLd;AACR,SAAKpB,KAAL,CAAW4B,MAAX,GAAoB,IAApB;AACA,QAAImE,QAAQ,GAAG,KAAK/F,KAAL,CAAWkC,cAAX,CAA0B,UAA1B,CAAf;AACA,QAAI8D,QAAQ,GAAGD,QAAQ,CAAC5D,YAAT,CAAsBhD,EAAE,CAAC8G,SAAzB,CAAf;AACAD,IAAAA,QAAQ,CAACE,IAAT,CAAc,UAAd;AACH,GA9LyB;AA+L1B;AACApE,EAAAA,SAhM0B,uBAgMd;AACR,SAAK9B,KAAL,CAAW4B,MAAX,GAAoB,KAApB;AACA,QAAImE,QAAQ,GAAG,KAAK/F,KAAL,CAAWkC,cAAX,CAA0B,UAA1B,CAAf;AACA,QAAI8D,QAAQ,GAAGD,QAAQ,CAAC5D,YAAT,CAAsBhD,EAAE,CAAC8G,SAAzB,CAAf;AACAD,IAAAA,QAAQ,CAACG,IAAT,CAAc,UAAd;AACH,GArMyB;AAsM1B;AACAC,EAAAA,SAvM0B,uBAuMf;AACPjH,IAAAA,EAAE,CAACmB,QAAH,CAAY+F,SAAZ,CAAsB,MAAtB;AACH,GAzMyB;AA0M1B;AACA5B,EAAAA,QA3M0B,sBA2Mf;AACP,SAAKvE,UAAL,GAAkB,KAAlB;AACA,SAAKC,YAAL,CAAkByB,MAAlB,GAA2B,IAA3B;AACA,SAAKzB,YAAL,CAAkB+B,cAAlB,CAAiC,OAAjC,EAA0CC,YAA1C,CAAuDhD,EAAE,CAACW,KAA1D,EAAiEuD,MAAjE,GAA0E,QAAQ,KAAK/B,KAAL,CAAWgC,QAAX,EAAlF;AACH;AA/MyB,CAAT,CAArB;AAkNAgD,MAAM,CAACC,OAAP,GAAiBrH,cAAjB","sourceRoot":"/","sourcesContent":["var Ball = require(\"./Ball\");\r\nvar Barrier = require(\"./Barrier\");\r\nvar Config = require(\"./Config\");\r\nrequire(\"./Shake\");\r\n//游戏主控制类\r\nvar MainController = cc.Class({\r\n    extends: cc.Component,\r\n    properties: () => ({\r\n        prefabBarriers: {\r\n            type: cc.Prefab,\r\n            default: []\r\n        },\r\n        prefabBall: cc.Prefab,\r\n        balls: {\r\n            type: Ball,\r\n            default: []\r\n        },\r\n        barriers: {\r\n            type: Barrier,\r\n            default: []\r\n        },\r\n        lbScoreCount: cc.Label,\r\n        ballCount: cc.Label,\r\n        guide: cc.Node, //开局指引 节点\r\n        gameStatus: true,\r\n        gameOverMark: cc.Node, //游戏结束 节点\r\n        takeAim:cc.Node //瞄准线 节点\r\n    }),\r\n\r\n    //加载完成\r\n    onLoad() {\r\n        //启用物理世界\r\n        cc.director.getPhysicsManager().enabled = true;\r\n        cc.director.getActionManager().gravity = cc.v2(0, -1000); //设置重力\r\n        //事件监听\r\n        this.node.on(cc.Node.EventType.TOUCH_START, this.onTouchStart, this);\r\n        this.node.on(cc.Node.EventType.TOUCH_END, this.onTouchEnd, this);\r\n        //显示游戏指引\r\n        this.init();\r\n        this.guideShow();\r\n        this.addBarriers();\r\n    },\r\n    //初始化\r\n    init(){\r\n        this.score = 0; //计分牌\r\n        this.recycleBallsCount = 1; //收回小球数\r\n        this.barrierScoreRate = 0; //设置障碍物基准率\r\n        this.balls[0].main = this;\r\n        this.balls[0].node.group = Config.groupBallInRecycle;\r\n        this.gameOverMark.active = false;\r\n        this.gameOverMark.zIndex = 10;\r\n        this.guide.zIndex = 10;\r\n        this.guide.active = false;\r\n        this.takeAim.main = this;\r\n    },\r\n    //触摸开始时\r\n    onTouchStart() {\r\n        this.guideHide();\r\n    },\r\n    //触摸结束\r\n    onTouchEnd(touch) {\r\n        if (!this.isRecycleFinished()) {\r\n            return;\r\n        }\r\n        let graphics = this.node.getChildByName(\"take-aim\").getComponent(cc.Graphics);\r\n        graphics.clear();\r\n        this.recycleBallsCount = 0;\r\n        let touchPos = this.node.convertTouchToNodeSpaceAR(touch.touch);\r\n        this.shootBalls(touchPos.sub(cc.v2(0, 420)));\r\n    },\r\n    //新增小球\r\n    addBall(pos) {\r\n        let ball = cc.instantiate(this.prefabBall).getComponent(Ball);\r\n        ball.node.parent = this.node;\r\n        ball.node.position = pos;\r\n        ball.main = this;\r\n        ball.node.group = Config.groupBallInGame;\r\n        this.balls.push(ball);\r\n        this.setBallCount(this.balls.length);\r\n    },\r\n    //显示小球总数\r\n    setBallCount(num){\r\n        this.ballCount.string = '小球数：' + num.toString();\r\n    },\r\n    //连续发射小球\r\n    shootBalls(dir) {\r\n        if (!this.gameStatus) {\r\n            return;\r\n        }\r\n        for (let i = 0; i < this.balls.length; i++) {\r\n            let ball = this.balls[i];\r\n            this.scheduleOnce(function () {\r\n                this.shootBall(ball, dir);\r\n            }.bind(this), i * 0.2)\r\n        }\r\n    },\r\n    //发射单个小球\r\n    shootBall(ball, dir) {\r\n        ball.rigidBody.active = false;\r\n        let pathPos = [];\r\n        pathPos.push(ball.node.position);\r\n        pathPos.push(cc.v2(0, 420));\r\n        ball.node.group = Config.groupBallInGame;\r\n        ball.node.runAction(cc.sequence(\r\n            cc.cardinalSplineTo(0.8, pathPos, 0.5),\r\n            cc.callFunc(function () {\r\n                ball.rigidBody.active = true;\r\n                ball.rigidBody.linearVelocity = dir.mul(3);\r\n            })\r\n        ))\r\n    },\r\n    //收回小球，上移一排障碍物\r\n    recycleBall() {\r\n        this.recycleBallsCount++;\r\n        this.barrierScoreRate += 0.1;\r\n        if (this.isRecycleFinished()) {\r\n            for (let i = 0; i < this.barriers.length; i++) {\r\n                let barrier = this.barriers[i];\r\n                barrier.node.runAction(cc.sequence(\r\n                    cc.moveBy(0.5, cc.v2(0, 100)),\r\n                    cc.callFunc(function () {\r\n                        if (barrier.node.position.y > 200) {\r\n                            barrier.node.runAction(cc.shake(1.5, 3, 3));\r\n                        }\r\n                        if (barrier.node.position.y > 300) {\r\n                            this.gameOver();\r\n                        }\r\n                    }.bind(this))\r\n                ))\r\n            }\r\n            this.addBarriers();\r\n        }\r\n    },\r\n    //小球是否收回完毕\r\n    isRecycleFinished() {\r\n        return this.recycleBallsCount == this.balls.length;\r\n    },\r\n    //添加障碍物\r\n    addBarriers() {\r\n        let startPosX = -270;\r\n        let endPosX = 270;\r\n        let currentPosX = startPosX + this.getRandomSpace();\r\n        while (currentPosX < endPosX) {\r\n            let barrier = cc.instantiate(this.prefabBarriers[Math.floor(Math.random() * this.prefabBarriers.length)]).getComponent(Barrier);\r\n            barrier.node.parent = this.node;\r\n            barrier.node.position = cc.v2(currentPosX, -410);\r\n            if (barrier.lbScore) {\r\n                barrier.node.rotation = Math.random() * 360;\r\n            }\r\n            barrier.main = this;\r\n            currentPosX += this.getRandomSpace();\r\n            this.barriers.push(barrier);\r\n        }\r\n    },\r\n    //抖动障碍物\r\n    shake(barrier) {\r\n        let shake = cc.shake(0.7, 1, 1);\r\n        barrier.node.runAction(shake);\r\n    },\r\n    //计分牌显示\r\n    addScore() {\r\n        this.score++;\r\n        this.lbScoreCount.string = '分数：' + this.score.toString();\r\n    },\r\n    \r\n    //设置障碍物自身分数值\r\n    setBarrierScore() {\r\n        let score = Math.floor(this.randomNum(1 + 2 * this.barrierScoreRate, 5 + 3 * this.barrierScoreRate));\r\n        return score;\r\n    },\r\n    //消除障碍物\r\n    removeBarrier(barrier) {\r\n        let idx = this.barriers.indexOf(barrier);\r\n        if (idx != -1) {\r\n            barrier.node.removeFromParent(false);\r\n            this.barriers.splice(idx, 1);\r\n        }\r\n    },\r\n    //获取随机距离，用于生成障碍物的间距\r\n    getRandomSpace() {\r\n        return 80 + Math.random() * 200;\r\n    },\r\n    //获取区间随机值\r\n    randomNum(Min, Max) {\r\n        var Range = Max - Min;\r\n        var Rand = Math.random();\r\n        var num = Min + Math.floor(Rand * Range);\r\n        return num;\r\n    },\r\n    //显示引导动画\r\n    guideShow() {\r\n        this.guide.active = true;\r\n        let handMove = this.guide.getChildByName('handMove');\r\n        let animCtrl = handMove.getComponent(cc.Animation);\r\n        animCtrl.play('handMove');\r\n    },\r\n    //关闭引导动画\r\n    guideHide() {\r\n        this.guide.active = false;\r\n        let handMove = this.guide.getChildByName('handMove');\r\n        let animCtrl = handMove.getComponent(cc.Animation);\r\n        animCtrl.stop('handMove');\r\n    },\r\n    //开始游戏\r\n    gameStart(){\r\n        cc.director.loadScene(\"game\");\r\n    },\r\n    //游戏结束\r\n    gameOver() {\r\n        this.gameStatus = false;\r\n        this.gameOverMark.active = true;\r\n        this.gameOverMark.getChildByName(\"score\").getComponent(cc.Label).string = \"得分：\" + this.score.toString();\r\n    }\r\n    \r\n});\r\nmodule.exports = MainController;"]}