{"version":3,"sources":["assets\\script\\TakeAim.js"],"names":["cc","Class","Component","properties","arraw","Sprite","onLoad","node","on","Node","EventType","TOUCH_MOVE","onTouchMove","touch","main","isRecycleFinished","origin","v2","touchPos","convertTouchToNodeSpaceAR","y","graphics","getComponent","Graphics","line","sub","length","lineLength","mag","increment","normalize","mul","pos","clone","fillColor","color","addSelf","clear","circle","x","fill","dis","angle","Math","atan2","PI","rotation"],"mappings":";;;;;;AAAA;AACAA,EAAE,CAACC,KAAH,CAAS;AACL,aAASD,EAAE,CAACE,SADP;AAELC,EAAAA,UAAU,EAAE;AAAA,WAAO;AACfC,MAAAA,KAAK,EAAEJ,EAAE,CAACK;AADK,KAAP;AAAA,GAFP;AAKL;AACAC,EAAAA,MANK,oBAMI;AACL,SAAKC,IAAL,CAAUC,EAAV,CAAaR,EAAE,CAACS,IAAH,CAAQC,SAAR,CAAkBC,UAA/B,EAA2C,KAAKC,WAAhD,EAA6D,IAA7D;AACH,GARI;AASL;AACAA,EAAAA,WAVK,uBAUOC,KAVP,EAUc;AACf,QAAG,CAAC,KAAKN,IAAL,CAAUO,IAAV,CAAeC,iBAAf,EAAJ,EAAuC;AACnC;AACH;;AACD,QAAIC,MAAM,GAAGhB,EAAE,CAACiB,EAAH,CAAM,CAAN,EAAS,GAAT,CAAb,CAJe,CAIc;;AAC7B,QAAIC,QAAQ,GAAG,KAAKX,IAAL,CAAUY,yBAAV,CAAoCN,KAAK,CAACA,KAA1C,CAAf;;AAEA,QAAIK,QAAQ,CAACE,CAAT,GAAaJ,MAAM,CAACI,CAAxB,EAA2B;AACvB;AACH;;AAED,QAAIC,QAAQ,GAAG,KAAKd,IAAL,CAAUe,YAAV,CAAuBtB,EAAE,CAACuB,QAA1B,CAAf;AACA,QAAIC,IAAI,GAAGN,QAAQ,CAACO,GAAT,CAAaT,MAAb,CAAX;AACA,QAAIU,MAAM,GAAG,EAAb;AACA,QAAIC,UAAU,GAAGH,IAAI,CAACI,GAAL,EAAjB,CAde,CAciB;;AAChC,QAAIC,SAAS,GAAGL,IAAI,CAACM,SAAL,GAAiBC,GAAjB,CAAqBL,MAArB,CAAhB,CAfe,CAe+B;;AAC9C,QAAIM,GAAG,GAAGhB,MAAM,CAACiB,KAAP,EAAV,CAhBe,CAgBW;;AAE1BZ,IAAAA,QAAQ,CAACa,SAAT,GAAqBlC,EAAE,CAACmC,KAAH,CAAS,GAAT,EAAc,GAAd,EAAmB,GAAnB,EAAwB,GAAxB,CAArB;AACAH,IAAAA,GAAG,CAACI,OAAJ,CAAYP,SAAZ;AACAG,IAAAA,GAAG,CAACI,OAAJ,CAAYP,SAAZ;AACAR,IAAAA,QAAQ,CAACgB,KAAT,GArBe,CAuBf;;AACA,WAAOV,UAAU,GAAGD,MAApB,EAA4B;AACxBL,MAAAA,QAAQ,CAACiB,MAAT,CAAgBN,GAAG,CAACO,CAApB,EAAuBP,GAAG,CAACZ,CAA3B,EAA8B,CAA9B;AACAC,MAAAA,QAAQ,CAACmB,IAAT;AACAR,MAAAA,GAAG,CAACI,OAAJ,CAAYP,SAAZ;AACAF,MAAAA,UAAU,IAAID,MAAd;AACH;;AAED,QAAIe,GAAG,GAAGzB,MAAM,CAACS,GAAP,CAAWP,QAAX,CAAV;AACA,QAAIwB,KAAK,GAAGC,IAAI,CAACC,KAAL,CAAWH,GAAG,CAACrB,CAAf,EAAkBqB,GAAG,CAACF,CAAtB,IAA2BI,IAAI,CAACE,EAAhC,GAAqC,GAAjD;AACA,SAAKzC,KAAL,CAAWG,IAAX,CAAgBuC,QAAhB,GAA2B,CAACJ,KAA5B;AACH;AA5CI,CAAT","sourceRoot":"/","sourcesContent":["//瞄准线 控制类\ncc.Class({\n    extends: cc.Component,\n    properties: () => ({\n        arraw: cc.Sprite,\n    }),\n    //加载完成\n    onLoad() {\n        this.node.on(cc.Node.EventType.TOUCH_MOVE, this.onTouchMove, this);\n    },\n    //触摸移动操作，射线瞄准\n    onTouchMove(touch) {\n        if(!this.node.main.isRecycleFinished()){\n            return;\n        }\n        let origin = cc.v2(0, 446);  //射线原点坐标\n        let touchPos = this.node.convertTouchToNodeSpaceAR(touch.touch);\n\n        if (touchPos.y > origin.y) {\n            return;\n        }\n\n        let graphics = this.node.getComponent(cc.Graphics);\n        let line = touchPos.sub(origin);\n        let length = 40;\n        let lineLength = line.mag();    //获得这个向量的长度\n        let increment = line.normalize().mul(length); //根据每条线段的长度获得一个增量向量\n        let pos = origin.clone(); //临时变量\n\n        graphics.fillColor = cc.color(255, 255, 255, 150);\n        pos.addSelf(increment);\n        pos.addSelf(increment);\n        graphics.clear();\n\n        //只要线段长度还大于每条线段的长度\n        while (lineLength > length) {\n            graphics.circle(pos.x, pos.y, 5);\n            graphics.fill();\n            pos.addSelf(increment);\n            lineLength -= length;\n        }\n\n        var dis = origin.sub(touchPos)\n        var angle = Math.atan2(dis.y, dis.x) / Math.PI * 180;\n        this.arraw.node.rotation = -angle;\n    }\n})\n"]}