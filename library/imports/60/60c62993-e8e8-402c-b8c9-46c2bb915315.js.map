{"version":3,"sources":["assets\\script\\barrier.js"],"names":["Barrier","cc","Class","Component","properties","lbScore","type","Label","isAddBuffBall","start","node","rotation","setScore","main","setBarrierScore","color","randomNum","Min","Max","Range","Rand","Math","random","num","floor","score","string","toString","onBeginContact","contact","selfCollider","otherCollider","addBall","position","removeBarrier","addScore","shake","module","exports"],"mappings":";;;;;;AAAA;AACA,IAAIA,OAAO,GAAGC,EAAE,CAACC,KAAH,CAAS;AACnB,aAASD,EAAE,CAACE,SADO;AAEnBC,EAAAA,UAAU,EAAE;AAAA,WAAO;AACfC,MAAAA,OAAO,EAAE;AACL,mBAAS,IADJ;AAELC,QAAAA,IAAI,EAAEL,EAAE,CAACM;AAFJ,OADM;AAKfC,MAAAA,aAAa,EAAE;AALA,KAAP;AAAA,GAFO;AASnB;AACAC,EAAAA,KAVmB,mBAUX;AACJ,QAAI,KAAKJ,OAAT,EAAkB;AACd,WAAKA,OAAL,CAAaK,IAAb,CAAkBC,QAAlB,GAA6B,CAAC,KAAKD,IAAL,CAAUC,QAAxC;AACH;;AACD,SAAKC,QAAL,CAAc,KAAKC,IAAL,CAAUC,eAAV,EAAd;AACA,SAAKJ,IAAL,CAAUK,KAAV,GAAkBd,EAAE,CAACc,KAAH,CAAS,GAAT,EAAc,KAAKC,SAAL,CAAe,CAAf,EAAkB,GAAlB,CAAd,EAAsC,KAAKA,SAAL,CAAe,CAAf,EAAkB,GAAlB,CAAtC,EAA8D,GAA9D,CAAlB;AAEH,GAjBkB;AAkBnB;AACAA,EAAAA,SAnBmB,qBAmBTC,GAnBS,EAmBJC,GAnBI,EAmBC;AAChB,QAAIC,KAAK,GAAGD,GAAG,GAAGD,GAAlB;AACA,QAAIG,IAAI,GAAGC,IAAI,CAACC,MAAL,EAAX;AACA,QAAIC,GAAG,GAAGN,GAAG,GAAGI,IAAI,CAACG,KAAL,CAAWJ,IAAI,GAAGD,KAAlB,CAAhB;AACA,WAAOI,GAAP;AACH,GAxBkB;AA0BnB;AACAX,EAAAA,QA3BmB,oBA2BVa,KA3BU,EA2BH;AACZ,QAAI,KAAKpB,OAAT,EAAkB;AACd,WAAKoB,KAAL,GAAaA,KAAb;AACA,WAAKpB,OAAL,CAAaqB,MAAb,GAAsB,KAAKD,KAAL,CAAWE,QAAX,EAAtB;AACH;AACJ,GAhCkB;AAiCnB;AACAC,EAAAA,cAlCmB,0BAkCJC,OAlCI,EAkCKC,YAlCL,EAkCmBC,aAlCnB,EAkCkC;AACjD,QAAI,KAAKvB,aAAT,EAAwB;AACpB,WAAKK,IAAL,CAAUmB,OAAV,CAAkB,KAAKtB,IAAL,CAAUuB,QAA5B;AACA,WAAKpB,IAAL,CAAUqB,aAAV,CAAwB,IAAxB;AACH,KAHD,MAGO;AACH,WAAKrB,IAAL,CAAUsB,QAAV;;AACA,UAAI,KAAKV,KAAL,IAAc,CAAlB,EAAqB;AACjB,aAAKZ,IAAL,CAAUqB,aAAV,CAAwB,IAAxB;AACH,OAFD,MAEO;AACH,aAAKtB,QAAL,CAAc,KAAKa,KAAL,GAAa,CAA3B;AACA,aAAKZ,IAAL,CAAUuB,KAAV,CAAgB,IAAhB;AACH;AAEJ;AACJ;AAhDkB,CAAT,CAAd;AAkDAC,MAAM,CAACC,OAAP,GAAiBtC,OAAjB","sourceRoot":"/","sourcesContent":["//障碍物类\nvar Barrier = cc.Class({\n    extends: cc.Component,\n    properties: () => ({\n        lbScore: {\n            default: null,\n            type: cc.Label\n        },\n        isAddBuffBall: false,\n    }),\n    //start\n    start() {\n        if (this.lbScore) {\n            this.lbScore.node.rotation = -this.node.rotation\n        }\n        this.setScore(this.main.setBarrierScore());\n        this.node.color = cc.color(200, this.randomNum(0, 255), this.randomNum(0, 255), 255)\n\n    },\n    //获取随机值\n    randomNum(Min, Max) {\n        var Range = Max - Min;\n        var Rand = Math.random();\n        var num = Min + Math.floor(Rand * Range);\n        return num;\n    },\n\n    //设置分数\n    setScore(score) {\n        if (this.lbScore) {\n            this.score = score;\n            this.lbScore.string = this.score.toString();\n        }\n    },\n    //发生碰撞时\n    onBeginContact(contact, selfCollider, otherCollider) {\n        if (this.isAddBuffBall) {\n            this.main.addBall(this.node.position);\n            this.main.removeBarrier(this);\n        } else {\n            this.main.addScore();\n            if (this.score == 1) {\n                this.main.removeBarrier(this);\n            } else {\n                this.setScore(this.score - 1);\n                this.main.shake(this);\n            }\n\n        }\n    }\n});\nmodule.exports = Barrier;\n"]}